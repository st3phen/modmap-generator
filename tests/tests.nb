(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[     23143,        474]
NotebookOptionsPosition[     22646,        453]
NotebookOutlinePosition[     23034,        470]
CellTagsIndexPosition[     22991,        467]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Tests", "Subsection",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.6341751464698563`*^9, 3.634175148997061*^9}, 
   3.6341751984803476`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"--", 
     RowBox[{"-", 
      RowBox[{"initialization", "--"}]}]}], "-"}], "*)"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"load", " ", "code"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SetDirectory", "[", 
     RowBox[{"ParentDirectory", "@", 
      RowBox[{"NotebookDirectory", "[", "]"}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Get", "[", "\"\<GenCGR.m\>\"", "]"}], ";", " ", 
    RowBox[{"Get", "[", "\"\<GenDistances.m\>\"", "]"}], ";", " ", 
    RowBox[{"Get", "[", "\"\<GenMDS.m\>\"", "]"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Get", " ", "forces", " ", "a", " ", "reload"}], ",", " ", 
     RowBox[{"Needs", " ", 
      RowBox[{"doesn", "'"}], "t"}]}], "*)"}], "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"CGR", " ", "settings"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"k", " ", "=", " ", "9"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cgrOrder", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<A\>\"", ",", " ", "\"\<C\>\"", ",", " ", "\"\<G\>\"", ",", " ", 
       "\"\<T\>\""}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"descriptors", " ", "settings"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"bins", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", " ", "1", ",", " ", "2", ",", " ", "5", ",", " ", "20", ",", 
       " ", "Infinity"}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"windowsizes", " ", "=", " ", 
     RowBox[{"{", "8", "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"steps", " ", "=", " ", 
     RowBox[{"{", "8", "}"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"fetch", " ", "data", " ", "for", " ", "tests"}], " ", "*)"}], 
   "\n", 
   RowBox[{
    RowBox[{"SetDirectory", "[", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", " ", "\"\<data\>\""}], 
       "}"}], "]"}], "]"}], ";"}], "\n", 
   RowBox[{"(*", " ", "inputs", " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"seq1", " ", "=", " ", 
     RowBox[{"StringReplace", "[", 
      RowBox[{
       RowBox[{"First", "@", 
        RowBox[{"Import", "[", "\"\<NC_000925.fasta\>\"", "]"}]}], ",", " ", 
       RowBox[{
        RowBox[{"Except", "[", "cgrOrder", "]"}], "->", "\"\<\>\""}]}], 
      "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"seq2", " ", "=", " ", 
     RowBox[{"StringReplace", "[", 
      RowBox[{
       RowBox[{"First", "@", 
        RowBox[{"Import", "[", "\"\<NC_000926.fasta\>\"", "]"}]}], ",", " ", 
       RowBox[{
        RowBox[{"Except", "[", "cgrOrder", "]"}], "->", "\"\<\>\""}]}], 
      "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"dists", " ", "=", " ", 
     RowBox[{"Uncompress", "[", 
      RowBox[{"<<", "\"\<test-dist-matr.dat\>\""}], "]"}]}], ";"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"expected", " ", "outputs"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "refcgr1", ",", " ", "refcgr2", ",", " ", "refdescr1", ",", " ", 
       "refdescr2", ",", " ", "refmds2", ",", " ", "refmds3"}], "}"}], " ", 
     "=", " ", 
     RowBox[{"Uncompress", "[", 
      RowBox[{"<<", "\"\<refdata.dat\>\""}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", "\"\<Finished loading test data\>\"", "]"}], ";"}], 
   "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"--", 
       RowBox[{"-", "tests"}]}], " ", "start", " ", 
      RowBox[{"here", "--"}]}], "-"}], "*)"}], "\n", "\n", 
   RowBox[{"(*", " ", "cgr", " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"time", " ", "=", " ", 
     RowBox[{"First", "@", 
      RowBox[{"AbsoluteTiming", "[", "\n", "\t", 
       RowBox[{
        RowBox[{"cgr1", " ", "=", " ", 
         RowBox[{"CGRgrayscale", "[", 
          RowBox[{"seq1", ",", " ", "cgrOrder", ",", " ", "k"}], "]"}]}], ";",
         "\n", "\t", 
        RowBox[{"cgr2", " ", "=", " ", 
         RowBox[{"CGRgrayscale", "[", 
          RowBox[{"seq2", ",", " ", "cgrOrder", ",", " ", "k"}], "]"}]}], 
        ";"}], "\n", "]"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<CGR test passes? \>\"", ",", " ", 
      RowBox[{
       RowBox[{"cgr1", "\[Equal]", "refcgr1"}], " ", "&&", " ", 
       RowBox[{"cgr2", "\[Equal]", "refcgr2"}]}], ",", " ", "\"\< in \>\"", 
      ",", " ", "time", ",", " ", "\"\< seconds\>\""}], "]"}], ";"}], "\n", 
   "\n", 
   RowBox[{"(*", " ", "descr", " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"time", " ", "=", " ", 
     RowBox[{"First", "@", 
      RowBox[{"AbsoluteTiming", "[", "\n", "\t", 
       RowBox[{
        RowBox[{"descr1", " ", "=", " ", 
         RowBox[{"Descriptor", "[", 
          RowBox[{
          "cgr1", ",", " ", "windowsizes", ",", " ", "steps", ",", " ", 
           "bins"}], "]"}]}], ";", "\n", "\t", 
        RowBox[{"descr2", " ", "=", " ", 
         RowBox[{"Descriptor", "[", 
          RowBox[{
          "cgr2", ",", " ", "windowsizes", ",", " ", "steps", ",", " ", 
           "bins"}], "]"}]}], ";"}], "\n", "]"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Descriptor test passes? \>\"", ",", " ", 
      RowBox[{
       RowBox[{"descr1", "\[Equal]", "refdescr1"}], " ", "&&", " ", 
       RowBox[{"descr2", "\[Equal]", "refdescr2"}]}], ",", " ", 
      "\"\< in \>\"", ",", " ", "time", ",", " ", "\"\< seconds\>\""}], "]"}],
     ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"info", "-", "dist"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"time", " ", "=", " ", 
     RowBox[{"First", "@", 
      RowBox[{"AbsoluteTiming", "[", "\n", "\t", 
       RowBox[{
        RowBox[{"infoDist", " ", "=", " ", 
         RowBox[{"ApproxInfoDist", "[", 
          RowBox[{"cgr1", ",", " ", "cgr2"}], "]"}]}], ";"}], "\n", "]"}]}]}],
     ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Info-dist test passes? \>\"", ",", " ", 
      RowBox[{"infoDist", " ", "\[Equal]", " ", 
       RowBox[{"81799", "/", "126439"}]}], ",", " ", "\"\< in \>\"", ",", " ",
       "time", ",", " ", "\"\< seconds\>\""}], "]"}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", "ssim", " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"time", " ", "=", " ", 
     RowBox[{"First", "@", 
      RowBox[{"AbsoluteTiming", "[", "\n", "\t", 
       RowBox[{
        RowBox[{"ssim", " ", "=", " ", 
         RowBox[{"SSIM", "[", 
          RowBox[{"cgr1", ",", " ", "cgr2"}], "]"}]}], ";"}], "\n", "]"}]}]}],
     ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<SSIM test passes? \>\"", ",", " ", 
      RowBox[{
       RowBox[{"Abs", "[", 
        RowBox[{"0.1895916544758307", " ", "-", " ", "ssim"}], "]"}], " ", 
       "\[LessEqual]", " ", 
       RowBox[{"10", "^", 
        RowBox[{"-", "6"}]}]}], ",", " ", "\"\< in \>\"", ",", " ", "time", 
      ",", " ", "\"\< seconds\>\""}], "]"}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"cuda", "-", "ssim"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"CUDAQ", "[", "]"}], ",", " ", "\n", "\t", 
      RowBox[{
       RowBox[{"time", " ", "=", " ", 
        RowBox[{"First", "@", 
         RowBox[{"AbsoluteTiming", "[", "\n", "\t\t", 
          RowBox[{
           RowBox[{"cudassim", " ", "=", " ", 
            RowBox[{"CUDASSIM", "[", 
             RowBox[{"cgr1", ",", " ", "cgr2"}], "]"}]}], ";"}], "\n", "\t", 
          "]"}]}]}], ";", "\n", "\t", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<CUDA SSIM test passes? \>\"", ",", " ", 
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{"0.1895916544758307", " ", "-", " ", "cudassim"}], "]"}], 
          " ", "\[LessEqual]", " ", 
          RowBox[{"10", "^", 
           RowBox[{"-", "6"}]}]}], ",", " ", "\"\< in \>\"", ",", " ", "time",
          ",", " ", "\"\< seconds\>\""}], "]"}], ";"}], "\n", ",", "\n", "\t", 
      RowBox[{
       RowBox[{"Print", "[", "\"\<Skipping CUDA SSIM test\>\"", "]"}], 
       ";"}]}], "\n", "]"}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"opencl", "-", "ssim"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"OpenCLQ", "[", "]"}], ",", " ", "\n", "\t", 
      RowBox[{
       RowBox[{"time", " ", "=", " ", 
        RowBox[{"First", "@", 
         RowBox[{"AbsoluteTiming", "[", "\n", "\t\t", 
          RowBox[{
           RowBox[{"openclssim", " ", "=", " ", 
            RowBox[{"OpenCLSSIM", "[", 
             RowBox[{"cgr1", ",", " ", "cgr2"}], "]"}]}], ";"}], "\n", "\t", 
          "]"}]}]}], ";", "\n", "\t", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<OpenCL SSIM test passes? \>\"", ",", " ", 
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{"0.1895916544758307", " ", "-", " ", "openclssim"}], "]"}],
           " ", "\[LessEqual]", " ", 
          RowBox[{"10", "^", 
           RowBox[{"-", "6"}]}]}], ",", " ", "\"\< in \>\"", ",", " ", "time",
          ",", " ", "\"\< seconds\>\""}], "]"}], ";"}], "\n", ",", "\n", "\t", 
      RowBox[{
       RowBox[{"Print", "[", "\"\<Skipping OpenCL SSIM test\>\"", "]"}], 
       ";"}]}], "\n", "]"}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", "mds", " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"time", " ", "=", " ", 
     RowBox[{"First", "@", 
      RowBox[{"AbsoluteTiming", "[", "\n", "\t", 
       RowBox[{
        RowBox[{"mds2", " ", "=", " ", 
         RowBox[{"MDS", "[", 
          RowBox[{"dists", ",", " ", "2"}], "]"}]}], ";", "\n", "\t", 
        RowBox[{"mds3", " ", "=", " ", 
         RowBox[{"MDS", "[", 
          RowBox[{"dists", ",", " ", "3"}], "]"}]}], ";"}], "\n", "]"}]}]}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<MDS test passes? \>\"", ",", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Max", "@", 
         RowBox[{"Abs", "[", 
          RowBox[{"mds2", "-", "refmds2"}], "]"}]}], " ", "\[LessEqual]", " ", 
        RowBox[{"10", "^", 
         RowBox[{"-", "14"}]}]}], " ", "&&", " ", 
       RowBox[{
        RowBox[{"Max", "@", 
         RowBox[{"Abs", "[", 
          RowBox[{"mds3", "-", "refmds3"}], "]"}]}], " ", "\[LessEqual]", " ", 
        RowBox[{"10", "^", 
         RowBox[{"-", "14"}]}]}]}], ",", " ", "\"\< in \>\"", ",", " ", 
      "time", ",", " ", "\"\< seconds\>\""}], "]"}], ";"}]}]}]], "Code",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->False,
 CellChangeTimes->{{3.5900258292727613`*^9, 3.590025864876798*^9}, {
   3.5900955127650194`*^9, 3.590095513239047*^9}, {3.5900957819164143`*^9, 
   3.590095782314437*^9}, {3.5902363331619506`*^9, 3.5902363523919506`*^9}, {
   3.5902363867019506`*^9, 3.590236419901951*^9}, 3.590236792622162*^9, {
   3.5902369522406507`*^9, 3.590236963177806*^9}, 3.5902400160600133`*^9, {
   3.5936323424772806`*^9, 3.593632363014202*^9}, {3.5936324182926917`*^9, 
   3.5936324496073704`*^9}, {3.5937836843046703`*^9, 3.59378370600467*^9}, 
   3.5937841285926704`*^9, 3.5937842077926702`*^9, 3.5937842773926706`*^9, 
   3.5937847924946704`*^9, 3.5937877026566706`*^9, {3.606224159221653*^9, 
   3.606224159901349*^9}, {3.6062243370403347`*^9, 3.6062243371614304`*^9}, {
   3.606225657106229*^9, 3.6062257225053635`*^9}, {3.60622576642638*^9, 
   3.606225793122914*^9}, {3.606225852723591*^9, 3.606225856029044*^9}, {
   3.606225919382411*^9, 3.6062259225159993`*^9}, {3.606226021268468*^9, 
   3.606226025127596*^9}, {3.6073031382875853`*^9, 3.607303138983625*^9}, {
   3.607303216559062*^9, 3.6073032177531304`*^9}, 3.6073033256193*^9, {
   3.60730344135992*^9, 3.607303481655225*^9}, {3.6073037959352007`*^9, 
   3.6073038364805193`*^9}, {3.6073038714175177`*^9, 3.607303894482837*^9}, {
   3.607303971184224*^9, 3.60730404122023*^9}, 3.6073056653291235`*^9, {
   3.607309003204039*^9, 3.6073090160767756`*^9}, 3.6073100917172985`*^9, {
   3.6081560486092997`*^9, 3.6081560506611357`*^9}, {3.608661699748809*^9, 
   3.608661702768301*^9}, {3.608661824598773*^9, 3.6086618581881866`*^9}, {
   3.6086619198045855`*^9, 3.60866192001552*^9}, {3.6086619784405537`*^9, 
   3.60866197914367*^9}, {3.608662925257535*^9, 3.6086629284098377`*^9}, {
   3.6086629949910173`*^9, 3.6086629969441175`*^9}, 3.6086636684166994`*^9, 
   3.60866958673236*^9, {3.6090792132232637`*^9, 3.609079214926367*^9}, {
   3.6090793057259855`*^9, 3.609079317635989*^9}, {3.609079379549259*^9, 
   3.6090793919319134`*^9}, {3.6090794260135083`*^9, 
   3.6090794386344404`*^9}, {3.6090794930478067`*^9, 
   3.6090795693515177`*^9}, {3.6090796289288797`*^9, 3.609079643893532*^9}, {
   3.609079685967212*^9, 3.609079701842009*^9}, {3.60908327054045*^9, 
   3.6090832984932175`*^9}, 3.609083684234865*^9, {3.609090812109707*^9, 
   3.609090852685235*^9}, {3.6090912454540415`*^9, 3.609091372513292*^9}, {
   3.6090914677903967`*^9, 3.60909147144446*^9}, {3.6090916544786434`*^9, 
   3.609091666152701*^9}, {3.609102591541356*^9, 3.6091026105127983`*^9}, {
   3.6091026453142815`*^9, 3.6091026555001526`*^9}, {3.6091028206468096`*^9, 
   3.609102823298007*^9}, {3.609102864123519*^9, 3.6091028646146984`*^9}, {
   3.6091029409359856`*^9, 3.6091029533609715`*^9}, 3.6091176503067074`*^9, {
   3.6093433848395224`*^9, 3.6093434356754303`*^9}, {3.6093438138880625`*^9, 
   3.6093438255527296`*^9}, {3.611683148206684*^9, 3.6116831506986847`*^9}, {
   3.6116835242636843`*^9, 3.6116835348816843`*^9}, {3.6116837963216844`*^9, 
   3.6116838167506847`*^9}, {3.611684487166775*^9, 3.611684506788501*^9}, {
   3.6116845418099985`*^9, 3.6116845522743187`*^9}, {3.6116846688431935`*^9, 
   3.6116846696824455`*^9}, {3.6116849325482063`*^9, 3.611684953764328*^9}, {
   3.611684986159567*^9, 3.6116850213580866`*^9}, 3.611685306197568*^9, {
   3.6116853506790156`*^9, 3.611685396836631*^9}, {3.61168563045399*^9, 
   3.611685658399784*^9}, {3.611685702026147*^9, 3.6116858160765505`*^9}, {
   3.611685917471689*^9, 3.6116860174556866`*^9}, {3.6116861023536606`*^9, 
   3.6116861232696605`*^9}, {3.6116861625396605`*^9, 
   3.6116861831526604`*^9}, {3.6116863379276605`*^9, 
   3.6116863512806606`*^9}, {3.6116864062256603`*^9, 
   3.6116864222216606`*^9}, {3.6116864547196603`*^9, 
   3.6116864567666607`*^9}, {3.6116865929636602`*^9, 
   3.6116866116556606`*^9}, {3.6116867732956605`*^9, 
   3.6116868162696605`*^9}, {3.6116869193236604`*^9, 
   3.6116869323956604`*^9}, {3.6116872521366606`*^9, 
   3.6116872531846604`*^9}, {3.6116873795276604`*^9, 3.61168748328666*^9}, {
   3.6116875254406605`*^9, 3.6116875623436604`*^9}, {3.6116876691726604`*^9, 
   3.61168767755766*^9}, 3.61168774499866*^9, {3.6116878034086604`*^9, 
   3.6116879183656607`*^9}, {3.6116880172766604`*^9, 3.61168808341866*^9}, {
   3.6116891478271055`*^9, 3.6116891782962456`*^9}, {3.61177443206496*^9, 
   3.611774489901165*^9}, 3.613824125133259*^9, {3.6139158193916426`*^9, 
   3.6139158322134237`*^9}, {3.6139158676278696`*^9, 3.613915885323862*^9}, {
   3.6234996208535156`*^9, 3.6234997815429688`*^9}, {3.6234999782822266`*^9, 
   3.6234999806884766`*^9}, {3.6235039762998047`*^9, 
   3.6235040116591797`*^9}, {3.6236027710146484`*^9, 3.6236027911875*^9}, {
   3.623683613275797*^9, 3.6236836135286226`*^9}, 3.6236883945683928`*^9, {
   3.6241591950455503`*^9, 3.624159199572025*^9}, {3.625596809942179*^9, 
   3.625596861539353*^9}, {3.625596917827804*^9, 3.6255969452040377`*^9}, {
   3.625597040103467*^9, 3.6255970426520615`*^9}, {3.6255971168499427`*^9, 
   3.6255971767466307`*^9}, {3.625597275386981*^9, 3.6255972799791427`*^9}, {
   3.625597522386879*^9, 3.6255975332955503`*^9}, {3.625597911882228*^9, 
   3.6255979415146627`*^9}, 3.6255980221379514`*^9, {3.6256200938767233`*^9, 
   3.6256201228041553`*^9}, {3.625621349068861*^9, 3.625621353054782*^9}, {
   3.62562139578977*^9, 3.625621396024145*^9}, {3.625622461713439*^9, 
   3.625622473123191*^9}, {3.62562266637991*^9, 3.6256226664892893`*^9}, 
   3.625623168402526*^9, 3.625623259207557*^9, {3.625715588855285*^9, 
   3.6257156040310893`*^9}, {3.6257159827662497`*^9, 
   3.6257159935244827`*^9}, {3.6257162946957827`*^9, 3.625716307979456*^9}, {
   3.625716350959687*^9, 3.62571642875991*^9}, {3.625716471332182*^9, 
   3.625716482444435*^9}, 3.625716558559552*^9, {3.6257167142918444`*^9, 
   3.6257167176068735`*^9}, 3.6257537662055397`*^9, {3.6257538139635086`*^9, 
   3.625753961272176*^9}, {3.6257540218951573`*^9, 3.6257540342720394`*^9}, {
   3.6257541476397753`*^9, 3.625754150656698*^9}, {3.6257545337829943`*^9, 
   3.625754537955439*^9}, {3.625754616383644*^9, 3.6257546247756896`*^9}, {
   3.625757471084272*^9, 3.625757474335303*^9}, 3.625758796925576*^9, 
   3.6257848028042126`*^9, {3.6257854875954494`*^9, 3.6257854910341225`*^9}, 
   3.6257863383637867`*^9, {3.6307858046312065`*^9, 3.6307858428024206`*^9}, {
   3.630785939515229*^9, 3.6307860417147155`*^9}, {3.6307861562127056`*^9, 
   3.6307862584152174`*^9}, 3.630786587458082*^9, {3.6307871525807695`*^9, 
   3.6307872012045784`*^9}, {3.6307872987811184`*^9, 3.630787306689475*^9}, {
   3.630787634871409*^9, 3.630787668322457*^9}, {3.6307880786983023`*^9, 
   3.630788104089094*^9}, {3.6307881443388557`*^9, 3.6307881453076077`*^9}, {
   3.630788190754453*^9, 3.6307882919370413`*^9}, {3.6307883377536497`*^9, 
   3.630788461295947*^9}, {3.6307885129472713`*^9, 3.6307887639283295`*^9}, {
   3.630788801031342*^9, 3.630788841704488*^9}, {3.6307892201295357`*^9, 
   3.6307892493993645`*^9}, {3.6307895299787707`*^9, 3.630789542692627*^9}, {
   3.630789601091529*^9, 3.6307896461256247`*^9}, {3.630789702543542*^9, 
   3.6307897228066864`*^9}, {3.6307898602861023`*^9, 
   3.6307898645525985`*^9}, {3.630790518014977*^9, 3.6307905533158627`*^9}, 
   3.6307911819992313`*^9, {3.6307912200160046`*^9, 3.630791220515997*^9}, {
   3.630795195015311*^9, 3.6307952708376293`*^9}, 3.630795302520629*^9, {
   3.6307953791197443`*^9, 3.6307954420228815`*^9}, {3.6307989419220333`*^9, 
   3.630798976814109*^9}, {3.630799080208748*^9, 3.6307990822739077`*^9}, {
   3.630799132463772*^9, 3.6307991471750965`*^9}, {3.6307992158168945`*^9, 
   3.6307992874764175`*^9}, 3.630799384840431*^9, {3.6307995230505157`*^9, 
   3.6307995541113377`*^9}, {3.6307997732092867`*^9, 
   3.6307998092423587`*^9}, {3.6308000974516354`*^9, 3.630800100704095*^9}, {
   3.630800262381646*^9, 3.630800262537898*^9}, 3.630800341539998*^9, {
   3.6308003812452188`*^9, 3.630800418266244*^9}, {3.630800457145218*^9, 
   3.6308005489557443`*^9}, {3.6308924847009006`*^9, 3.630892486844637*^9}, {
   3.6309330562900047`*^9, 3.630933106573952*^9}, {3.6309332096798754`*^9, 
   3.630933209726878*^9}, {3.632262565182148*^9, 3.6322625808045444`*^9}, 
   3.632263170467165*^9, 3.6322654957519712`*^9, 3.6322690865188446`*^9, {
   3.6337154955538054`*^9, 3.63371552104425*^9}, {3.633715635454851*^9, 
   3.6337156356264515`*^9}, {3.633715708228979*^9, 3.6337157398970346`*^9}, {
   3.6337158264303865`*^9, 3.633715878050877*^9}, {3.6338071518370132`*^9, 
   3.633807158545025*^9}, {3.6338074266775117`*^9, 3.633807430327918*^9}, {
   3.6338151067142925`*^9, 3.6338152248525023`*^9}, {3.633815255778757*^9, 
   3.6338152967564297`*^9}, {3.633818464155045*^9, 3.6338185755734406`*^9}, {
   3.633818609910101*^9, 3.6338186294589357`*^9}, {3.6338186714562097`*^9, 
   3.6338187078394737`*^9}, {3.6338187678597794`*^9, 3.633818768748981*^9}, {
   3.63381899793017*^9, 3.6338190293826275`*^9}, 3.6338190601010814`*^9, {
   3.633822508411913*^9, 3.633822517149928*^9}, {3.6338258747099557`*^9, 
   3.63382587681596*^9}, {3.63382629347476*^9, 3.6338263356260347`*^9}, {
   3.6338264497558346`*^9, 3.6338264518774385`*^9}, {3.6338266185013313`*^9, 
   3.633826621184536*^9}, {3.633832482931408*^9, 3.633832494040628*^9}, {
   3.6338327329442496`*^9, 3.6338327379704585`*^9}, {3.6338327888229485`*^9, 
   3.6338327968569627`*^9}, 3.6338775757100053`*^9, {3.6338777769147663`*^9, 
   3.633877778427969*^9}, 3.633879166069461*^9, 3.6338801044138637`*^9, 
   3.633880251547326*^9, {3.633881219416033*^9, 3.633881275158931*^9}, 
   3.6338824243577356`*^9, 3.633882544165946*^9, {3.633886049257115*^9, 
   3.633886050239917*^9}, {3.6338922502122755`*^9, 3.6338922652215023`*^9}, {
   3.6340771581216617`*^9, 3.6340771726904945`*^9}, {3.634082674345172*^9, 
   3.63408267466719*^9}, {3.634167713252611*^9, 3.6341677348586493`*^9}, {
   3.634167772532716*^9, 3.6341678543860593`*^9}, {3.634168023973957*^9, 
   3.6341680474519987`*^9}, {3.6341681173557215`*^9, 3.634168171815417*^9}, {
   3.6341684505099063`*^9, 3.634168535093255*^9}, {3.6341687763008785`*^9, 
   3.6341688216345577`*^9}, {3.63416936927352*^9, 3.634169387541152*^9}, {
   3.6341695457098303`*^9, 3.63416959723672*^9}, {3.6341702901899376`*^9, 
   3.634170326319601*^9}, {3.6341704093117466`*^9, 3.634170458997834*^9}, {
   3.634170564251219*^9, 3.6341707419199305`*^9}, {3.634170772137184*^9, 
   3.63417082667488*^9}, {3.634170929697461*^9, 3.6341710341240444`*^9}, {
   3.634174832405488*^9, 3.634174976312956*^9}, 3.6341751984803476`*^9, {
   3.6341754784214525`*^9, 3.634175508264305*^9}, 3.634230619092757*^9, {
   3.634230895720849*^9, 3.634230905582066*^9}, {3.634236672004484*^9, 
   3.6342366943407617`*^9}, {3.6342367251585245`*^9, 3.634236730436826*^9}, {
   3.6342369698235188`*^9, 3.6342369799180956`*^9}, {3.634250225002082*^9, 
   3.634250256499883*^9}, {3.6342503009984283`*^9, 3.634250303932596*^9}, {
   3.6399135571055307`*^9, 3.6399135591023345`*^9}, {3.6399183084856815`*^9, 
   3.6399184917114344`*^9}, {3.6399187612197104`*^9, 3.639918850498068*^9}, {
   3.6399190768216543`*^9, 3.6399190792864585`*^9}, {3.6399191426696973`*^9, 
   3.639919142825698*^9}, {3.6399255235663896`*^9, 3.6399255405648203`*^9}, {
   3.639959535291831*^9, 3.639959538942237*^9}, {3.6410412432910156`*^9, 
   3.6410412449404297`*^9}}]
}, Open  ]]
},
WindowSize->{1280, 942},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
ShowSelection->True,
ShowGroupOpener->True,
FrontEndVersion->"10.1 for Microsoft Windows (32-bit) (March 23, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 176, 3, 49, "Subsection",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[758, 27, 21872, 423, 1613, "Code",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->False]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
